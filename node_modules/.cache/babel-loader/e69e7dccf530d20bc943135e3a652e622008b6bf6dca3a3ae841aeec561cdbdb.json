{"ast":null,"code":"var _jsxFileName = \"/Users/asolanki/btc-isla-map/src/components/map.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, Polygon } from 'react-leaflet';\nimport axios from 'axios';\nimport 'leaflet/dist/leaflet.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapComponent = () => {\n  _s();\n  const [polygonCoordinates, setPolygonCoordinates] = useState([]); // Polygon data\n  const [markerCoordinates, setMarkerCoordinates] = useState([]); // Markers extracted from polygon points\n\n  // Fetch geo_json data from the API\n  useEffect(() => {\n    const fetchCoordinates = async () => {\n      try {\n        const response = await axios.get('https://api.btcmap.org/v2/areas/btc-isla');\n        const polygonData = response.data.tags.geo_json.coordinates[0];\n\n        // Set polygon data for visualization\n        const formattedPolygon = polygonData.map(([lng, lat]) => [lat, lng]); // Reverse to [lat, lng]\n        setPolygonCoordinates(formattedPolygon);\n\n        // Extract individual points as markers\n        const markers = polygonData.map(([lng, lat], index) => ({\n          id: index,\n          latitude: lat,\n          longitude: lng\n        }));\n        setMarkerCoordinates(markers);\n      } catch (error) {\n        console.error('Error fetching coordinates:', error.message);\n      }\n    };\n    fetchCoordinates();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Bitcoin Map of Isla Mujeres\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: [21.2322, -86.7314],\n      zoom: 13,\n      style: {\n        height: '500px',\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n        attribution: \"\\xA9 OpenStreetMap contributors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), polygonCoordinates.length > 0 && /*#__PURE__*/_jsxDEV(Polygon, {\n        positions: polygonCoordinates,\n        color: \"green\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), markerCoordinates.map(marker => /*#__PURE__*/_jsxDEV(Marker, {\n        position: [marker.latitude, marker.longitude],\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Marker:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), \" Point \", marker.id + 1, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), \"Latitude: \", marker.latitude, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this), \"Longitude: \", marker.longitude]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)\n      }, marker.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(MapComponent, \"zqVDNLeeKITVBvosTAoGaUxhEp4=\");\n_c = MapComponent;\nexport default MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","useEffect","useState","MapContainer","TileLayer","Marker","Popup","Polygon","axios","jsxDEV","_jsxDEV","MapComponent","_s","polygonCoordinates","setPolygonCoordinates","markerCoordinates","setMarkerCoordinates","fetchCoordinates","response","get","polygonData","data","tags","geo_json","coordinates","formattedPolygon","map","lng","lat","markers","index","id","latitude","longitude","error","console","message","children","fileName","_jsxFileName","lineNumber","columnNumber","center","zoom","style","height","width","url","attribution","length","positions","color","marker","position","_c","$RefreshReg$"],"sources":["/Users/asolanki/btc-isla-map/src/components/map.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, Polygon } from 'react-leaflet';\nimport axios from 'axios';\nimport 'leaflet/dist/leaflet.css';\n\nconst MapComponent = () => {\n  const [polygonCoordinates, setPolygonCoordinates] = useState([]); // Polygon data\n  const [markerCoordinates, setMarkerCoordinates] = useState([]);   // Markers extracted from polygon points\n\n  // Fetch geo_json data from the API\n  useEffect(() => {\n    const fetchCoordinates = async () => {\n      try {\n        const response = await axios.get('https://api.btcmap.org/v2/areas/btc-isla');\n        const polygonData = response.data.tags.geo_json.coordinates[0];\n\n        // Set polygon data for visualization\n        const formattedPolygon = polygonData.map(([lng, lat]) => [lat, lng]); // Reverse to [lat, lng]\n        setPolygonCoordinates(formattedPolygon);\n\n        // Extract individual points as markers\n        const markers = polygonData.map(([lng, lat], index) => ({\n          id: index,\n          latitude: lat,\n          longitude: lng,\n        }));\n        setMarkerCoordinates(markers);\n      } catch (error) {\n        console.error('Error fetching coordinates:', error.message);\n      }\n    };\n\n    fetchCoordinates();\n  }, []);\n\n  return (\n    <div>\n      <h1>Bitcoin Map of Isla Mujeres</h1>\n\n      {/* Map */}\n      <MapContainer center={[21.2322, -86.7314]} zoom={13} style={{ height: '500px', width: '100%' }}>\n        <TileLayer\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          attribution=\"&copy; OpenStreetMap contributors\"\n        />\n\n        {/* Polygon */}\n        {polygonCoordinates.length > 0 && (\n          <Polygon positions={polygonCoordinates} color=\"green\" />\n        )}\n\n        {/* Markers */}\n        {markerCoordinates.map((marker) => (\n          <Marker key={marker.id} position={[marker.latitude, marker.longitude]}>\n            <Popup>\n              <strong>Marker:</strong> Point {marker.id + 1}\n              <br />\n              Latitude: {marker.latitude}\n              <br />\n              Longitude: {marker.longitude}\n            </Popup>\n          </Marker>\n        ))}\n      </MapContainer>\n    </div>\n  );\n};\n\nexport default MapComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}