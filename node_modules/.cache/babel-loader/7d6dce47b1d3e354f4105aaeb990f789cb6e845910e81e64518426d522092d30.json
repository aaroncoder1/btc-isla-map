{"ast":null,"code":"var _jsxFileName = \"/Users/asolanki/btc-isla-map/src/components/map.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport axios from 'axios';\nimport 'leaflet/dist/leaflet.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MapComponent = () => {\n  _s();\n  const [nodes, setNodes] = useState([]);\n\n  // Fetch and filter nodes for btc-isla\n  useEffect(() => {\n    const fetchNodes = async () => {\n      try {\n        // Fetch all elements\n        const response = await axios.get('https://api.btcmap.org/v2/elements');\n        const allNodes = response.data;\n\n        // Filter nodes where tags.areas contains url_alias \"btc-isla\"\n        const filteredNodes = allNodes.filter(node => {\n          var _node$tags, _node$tags$areas;\n          return (_node$tags = node.tags) === null || _node$tags === void 0 ? void 0 : (_node$tags$areas = _node$tags.areas) === null || _node$tags$areas === void 0 ? void 0 : _node$tags$areas.some(area => area.url_alias === 'btc-isla');\n        });\n\n        // Format and validate nodes for Leaflet Markers\n        const formattedNodes = filteredNodes.map(node => {\n          var _node$osm_json, _node$osm_json2, _node$osm_json3, _node$osm_json3$tags, _node$tags2, _node$osm_json4, _node$osm_json4$tags, _node$osm_json5, _node$osm_json5$tags;\n          const lat = (_node$osm_json = node.osm_json) === null || _node$osm_json === void 0 ? void 0 : _node$osm_json.lat;\n          const lon = (_node$osm_json2 = node.osm_json) === null || _node$osm_json2 === void 0 ? void 0 : _node$osm_json2.lon;\n          if (!lat || !lon) return null; // Skip nodes with invalid coordinates\n\n          return {\n            id: node.id,\n            name: ((_node$osm_json3 = node.osm_json) === null || _node$osm_json3 === void 0 ? void 0 : (_node$osm_json3$tags = _node$osm_json3.tags) === null || _node$osm_json3$tags === void 0 ? void 0 : _node$osm_json3$tags.name) || 'Unknown',\n            latitude: lat,\n            longitude: lon,\n            category: ((_node$tags2 = node.tags) === null || _node$tags2 === void 0 ? void 0 : _node$tags2.category) || 'Other',\n            website: ((_node$osm_json4 = node.osm_json) === null || _node$osm_json4 === void 0 ? void 0 : (_node$osm_json4$tags = _node$osm_json4.tags) === null || _node$osm_json4$tags === void 0 ? void 0 : _node$osm_json4$tags.website) || null,\n            phone: ((_node$osm_json5 = node.osm_json) === null || _node$osm_json5 === void 0 ? void 0 : (_node$osm_json5$tags = _node$osm_json5.tags) === null || _node$osm_json5$tags === void 0 ? void 0 : _node$osm_json5$tags.phone) || null\n          };\n        }).filter(node => node !== null); // Remove null entries\n\n        setNodes(formattedNodes);\n      } catch (error) {\n        console.error('Error fetching nodes:', error.message);\n      }\n    };\n    fetchNodes();\n  }, []);\n  useEffect(() => {\n    console.log('Final Nodes:', nodes); // Log when nodes state changes\n  }, [nodes]); // Runs whenever nodes is updated\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Bitcoin Map of Isla Mujeres\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: [21.2322, -86.7314],\n      zoom: 14,\n      style: {\n        height: '500px',\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n        attribution: \"\\xA9 OpenStreetMap contributors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), nodes.map(node => /*#__PURE__*/_jsxDEV(Marker, {\n        position: [node.latitude, node.longitude],\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: node.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this), \"Category: \", node.category, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), node.website && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [\"Website: \", /*#__PURE__*/_jsxDEV(\"a\", {\n              href: node.website,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              children: node.website\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 28\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true), node.phone && `Phone: ${node.phone}`]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)\n      }, node.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(MapComponent, \"aOcCv4Mr08XcotHcdYIIubqmewM=\");\n_c = MapComponent;\nexport default MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","useEffect","useState","MapContainer","TileLayer","Marker","Popup","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","MapComponent","_s","nodes","setNodes","fetchNodes","response","get","allNodes","data","filteredNodes","filter","node","_node$tags","_node$tags$areas","tags","areas","some","area","url_alias","formattedNodes","map","_node$osm_json","_node$osm_json2","_node$osm_json3","_node$osm_json3$tags","_node$tags2","_node$osm_json4","_node$osm_json4$tags","_node$osm_json5","_node$osm_json5$tags","lat","osm_json","lon","id","name","latitude","longitude","category","website","phone","error","console","message","log","children","fileName","_jsxFileName","lineNumber","columnNumber","center","zoom","style","height","width","url","attribution","position","href","target","rel","_c","$RefreshReg$"],"sources":["/Users/asolanki/btc-isla-map/src/components/map.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport axios from 'axios';\nimport 'leaflet/dist/leaflet.css';\n\nconst MapComponent = () => {\n  const [nodes, setNodes] = useState([]);\n\n  // Fetch and filter nodes for btc-isla\n  useEffect(() => {\n    const fetchNodes = async () => {\n      try {\n        // Fetch all elements\n        const response = await axios.get('https://api.btcmap.org/v2/elements');\n        const allNodes = response.data;\n\n        // Filter nodes where tags.areas contains url_alias \"btc-isla\"\n        const filteredNodes = allNodes.filter((node) =>\n          node.tags?.areas?.some((area) => area.url_alias === 'btc-isla')\n        );\n\n        // Format and validate nodes for Leaflet Markers\n        const formattedNodes = filteredNodes\n          .map((node) => {\n            const lat = node.osm_json?.lat;\n            const lon = node.osm_json?.lon;\n            if (!lat || !lon) return null; // Skip nodes with invalid coordinates\n\n            return {\n              id: node.id,\n              name: node.osm_json?.tags?.name || 'Unknown',\n              latitude: lat,\n              longitude: lon,\n              category: node.tags?.category || 'Other',\n              website: node.osm_json?.tags?.website || null,\n              phone: node.osm_json?.tags?.phone || null,\n            };\n          })\n          .filter((node) => node !== null); // Remove null entries\n\n        setNodes(formattedNodes);\n      } catch (error) {\n        console.error('Error fetching nodes:', error.message);\n      }\n    };\n\n    fetchNodes();\n  }, []);\n  useEffect(() => {\n    console.log('Final Nodes:', nodes); // Log when nodes state changes\n  }, [nodes]); // Runs whenever nodes is updated\n\n  return (\n    <div>\n      <h1>Bitcoin Map of Isla Mujeres</h1>\n      <MapContainer center={[21.2322, -86.7314]} zoom={14} style={{ height: '500px', width: '100%' }}>\n        <TileLayer\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          attribution=\"&copy; OpenStreetMap contributors\"\n        />\n\n        {/* Render Markers */}\n        {nodes.map((node) => (\n          <Marker key={node.id} position={[node.latitude, node.longitude]}>\n            <Popup>\n              <strong>{node.name}</strong>\n              <br />\n              Category: {node.category}\n              <br />\n              {node.website && (\n                <>\n                  Website: <a href={node.website} target=\"_blank\" rel=\"noopener noreferrer\">{node.website}</a>\n                  <br />\n                </>\n              )}\n              {node.phone && `Phone: ${node.phone}`}\n            </Popup>\n          </Marker>\n        ))}\n      </MapContainer>\n    </div>\n  );\n};\n\nexport default MapComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}